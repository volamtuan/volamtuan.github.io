<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Facebook Page Checker</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <style>
    body { background-color: #121212; color: #ffffff; font-family: 'Segoe UI', sans-serif; }
    textarea { background: #1e1e1e; color: #ffffff; border: 1px solid #333; }
    .token-section { background-color: #1f1f1f; border: 1px solid #333; border-radius: 8px; padding: 15px; margin-bottom: 20px; box-shadow: 0 0 10px rgba(0,0,0,0.5); }
    .token-header { font-weight: bold; font-size: 16px; color: #00ff99; margin-bottom: 10px; }
    table { width: 100%; color: #fff; }
    th, td { padding: 8px; text-align: left; }
    th { background-color: #222; position: sticky; top: 0; }
    .error { color: #ff4d4d; }
    .spinner-border { width: 1.5rem; height: 1.5rem; }
  </style>
</head>
<body class="container py-5">
  <h2 class="mb-4 text-center">‚úÖ C√¥ng C·ª• Check Page</h2>
  <div class="mb-4">

    <textarea id="tokens" class="form-control" rows="5" placeholder="üîë D√°n danh s√°ch Token (1 d√≤ng 1 token):..."></textarea>
  </div>
  <button onclick="runScript()" class="btn btn-success w-100 mb-4">‚ñ∂Ô∏è B·∫Øt ƒë·∫ßu ki·ªÉm tra</button>
  <div id="output"></div>
  <script>
    async function runScript() {
      const tokensTextarea = document.getElementById('tokens');
      const accessTokens = tokensTextarea.value.trim().split('\n').map(t => t.trim()).filter(t => t !== '');
      const outputDiv = document.getElementById('output');
      outputDiv.innerHTML = '';

      for (const accessToken of accessTokens) {
        const tokenSection = document.createElement('div');
        tokenSection.classList.add('token-section');
        const tokenHeader = document.createElement('div');
        tokenHeader.classList.add('token-header');
        tokenHeader.innerHTML = `üîé ƒêang ki·ªÉm tra: <code>${accessToken.slice(0, 15)}...</code> <div class="spinner-border text-success float-end" role="status"></div>`;
        tokenSection.appendChild(tokenHeader);
        outputDiv.appendChild(tokenSection);
        try {
          await checkUserData(accessToken, tokenSection);
          await checkPages(accessToken, tokenSection);
          await checkGroups(accessToken, tokenSection);
        } catch (error) {
          tokenSection.innerHTML += `<p class="error">‚ùå L·ªói: ${error.message}</p>`;
        }
        tokenHeader.querySelector('.spinner-border')?.remove();
      }
    }

    async function checkUserData(accessToken, tokenSection) {
      try {
        tokenSection.innerHTML += `<p>üë§ ƒêang l·∫•y th√¥ng tin ng∆∞·ªùi d√πng...</p>`;
        const res = await axios.get(`https://graph.facebook.com/v18.0/me?fields=name,id&access_token=${accessToken}`);
        const { name, id } = res.data;
        tokenSection.innerHTML += `
          <table class="table table-bordered table-dark table-sm">
            <tr><th>T√™n</th><td>${name}</td></tr>
            <tr><th>ID</th><td>${id}</td></tr>
          </table>`;
      } catch (error) {
        const msg = error.response?.data?.error?.message || error.message;
        tokenSection.innerHTML += `<p class="error">‚ö†Ô∏è L·ªói khi l·∫•y th√¥ng tin ng∆∞·ªùi d√πng: ${msg}</p>`;
      }
    }

    async function checkPages(accessToken, tokenSection) {
      try {
        tokenSection.innerHTML += `<p>üìò ƒêang ki·ªÉm tra Fanpage...</p>`;
        const res = await axios.get(`https://graph.facebook.com/v2.6/me/accounts?fields=name,id,fan_count,followers_count&access_token=${accessToken}`);
        const pages = res.data.data;
        if (pages.length > 0) {
          let html = '<table class="table table-bordered table-dark table-sm"><thead><tr><th>T√™n Page</th><th>ID</th><th>Like</th><th>Follow</th></tr></thead><tbody>';
          for (const page of pages) {
            html += `<tr>
              <td>${page.name}</td>
              <td>${page.id}</td>
              <td>${page.fan_count || 'N/A'}</td>
              <td>${page.followers_count || 'N/A'}</td>
            </tr>`;
          }
          html += '</tbody></table>';
          tokenSection.innerHTML += html;
        } else {
          tokenSection.innerHTML += `<p>‚ö†Ô∏è Kh√¥ng c√≥ Fanpage n√†o.</p>`;
        }
      } catch (error) {
        const msg = error.response?.data?.error?.message || error.message;
        tokenSection.innerHTML += `<p class="error">‚ùå L·ªói khi ki·ªÉm tra Fanpage: ${msg}</p>`;
      }
    }

    async function checkGroups(accessToken, tokenSection) {
      try {
        tokenSection.innerHTML += `<p>üë• ƒêang ki·ªÉm tra Nh√≥m...</p>`;
        const res = await axios.get(`https://graph.facebook.com/v2.6/me/groups?fields=id,name,members_count&limit=5000&access_token=${accessToken}`);
        const groups = res.data.data;
        if (groups.length > 0) {
          let html = '<table class="table table-bordered table-dark table-sm"><thead><tr><th>T√™n Nh√≥m</th><th>ID</th><th>Th√†nh vi√™n</th></tr></thead><tbody>';
          for (const group of groups) {
            html += `<tr>
              <td>${group.name}</td>
              <td>${group.id}</td>
              <td>${group.members_count || 'N/A'}</td>
            </tr>`;
          }
          html += '</tbody></table>';
          tokenSection.innerHTML += html;
        } else {
          tokenSection.innerHTML += `<p>‚ö†Ô∏è Kh√¥ng c√≥ nh√≥m n√†o.</p>`;
        }
      } catch (error) {
        const msg = error.response?.data?.error?.message || error.message;
        tokenSection.innerHTML += `<p class="error">‚ùå L·ªói khi ki·ªÉm tra Nh√≥m: ${msg}</p>`;
      }
    }
  </script>
</body>
</html>
